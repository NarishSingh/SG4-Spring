/*----------------------------------------------------*/

@startuml
title TSG Flooring Corp - addOrder() Sequence

View <- Controller : displayAddOrderBanner()
View --> Controller : void 

View <- Controller : inputOrderDate()
View --> Controller : LocalDate
Controller -> Service : validateOrderDate(LocalDate)
Service --> Controller : LocalDate
View <- Controller : inputCustomerName()
View --> Controller : String
Controller -> Service : validateCustomerName(String)
Service --> Controller : String
View <- Controller : inputState()
View --> Controller : String
Controller -> Service : validateState(String)
Service --> Controller : State
View <- Controller : inputProductType()
View --> Controller : String
Controller -> Service : validateProductType(String)
Service --> Controller : Product
View <- Controller : inputArea()
View --> Controller : BigDecimal
Controller --> Controller : Order(LocalDate, String, State, Product, BigDecimal)

Controller -> Service: addOrder(Order)
Service --> StateDao : readStateByID(State)
StateDao --> StateDao : loadStates()
StateDao --> Service : State
Service --> StateDao : readProductByID(Product)
StateDao --> StateDao : loadProducts()
StateDao --> Service : Product
Service --> Service : calcMaterialCost()
Service --> Service : calcLaborCost()
Service --> Service : calcTax()
Service --> Service : calcTotal()
Service --> Service : getHighestOrderNumber()
Service --> Service : Order(LocalDate, int, String, State, Product, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal)
OrderDao --> OrderDao : loadAllOrders()
Service -> OrderDao : addOrder(Order)
OrderDao --> Service : Order
OrderDao --> OrderDao : writeAllOrders()
Service --> Controller : Order

OrderDao -[#blue]-> AuditDao : writeAuditEntry()

Controller -> View : displayOrderInfo(Order)
View --> Controller : void

Controller -> View : displayAddOrderSuccessBanner()
View --> Controller : void

@enduml

/*----------------------------------------------------*/

@startuml
title TSG Flooring Corp - removeOrder() Sequence

View <- Controller : displayRemoveOrderBanner()
View --> Controller : void 
View <- Controller : getOrderRemovalDate()
View --> Controller : LocalDate
View <- Controller : getOrderRemovalNum()
View --> Controller : int


Controller -> Service : removeOrder(LocalDate, int)
OrderDao --> OrderDao : loadAllOrders()
Service -> OrderDao : removeOrder(LocalDate, int)
OrderDao --> OrderDao : writeAllOrders()
OrderDao --> Service : Order
Service --> Controller : Order

OrderDao -[#blue]-> AuditDao : writeAuditEntry()

Controller -> View : displayRemoveOrderSuccessBanner()
View --> Controller : void

@enduml

/*----------------------------------------------------*/

@startuml
title TSG Flooring Corp - editOrder() Sequence

View <-- Controller : displayEditOrderBanner()
View --> Controller : void
'all \n user entries must  be copied over

View <- Controller : inputEditOrderDate()
View --> Controller : LocalDate
Controller -> Service : validateOrderDate(LocalDate)
Service --> Controller : LocalDate
View <- Controller : inputEditCustomerName()
View --> Controller : String
Controller -> Service : validateCustomerName(String)
Service --> Controller : String
View <- Controller : inputEditState()
View --> Controller : String
Controller -> Service : validateState(String)
Service --> Controller : State
View <- Controller : inputEditProductType()
View --> Controller : String
Controller -> Service : validateProductType(String)
Service --> Controller : Product
View <- Controller : inputEditArea()
View --> Controller : BigDecimal
Controller --> Controller : Order(LocalDate, String, State, Product, BigDecimal)

Controller -> Service: addOrder(Order)
Service --> StateDao : readStateByID(State)
StateDao --> StateDao : loadStates()
StateDao --> Service : State
Service --> StateDao : readProductByID(Product)
StateDao --> StateDao : loadProducts()
StateDao --> Service : Product
Service --> Service : calcMaterialCost()
Service --> Service : calcLaborCost()
Service --> Service : calcTax()
Service --> Service : calcTotal()
Service --> Service : getHighestOrderNumber()
Service --> Service : Order(LocalDate, int, String, State, Product, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal)
OrderDao --> OrderDao : loadAllOrders()
Service -> OrderDao : addOrder(Order)
OrderDao --> Service : Order
OrderDao --> OrderDao : writeAllOrders()
Service --> Controller : Order

OrderDao -[#blue]-> AuditDao : writeAuditEntry()

Controller -> View : displayOrderInfo(Order)
View --> Controller : void

Controller -> View : displayEditOrderSuccessBanner()
View --> Controller : void

@enduml

/*----------------------------------------------------*/

@startuml
title TSG Flooring Corp - displayOrders() Sequence

View <-- Controller : displayDisplayOrdersBanner()
View --> Controller : void
View <- Controller : getOrdersDate()
View --> Controller : LocalDate

Controller -> Service : getOrdersByDate(LocalDate)
Service -> OrderDao : getOrdersByDate(LocalDate)
OrderDao --> OrderDao : loadAllOrders()
OrderDao --> OrderDao : unmarshallOrder(String)
OrderDao --> Service : Map<Integer, Order>
Service --> Controller : Map<Integer, Order>

Controller -> View : displayOrdersByDateInfo(Map<Integer, Order>)
View --> Controller : void

@enduml

/*----------------------------------------------------*/

@startuml
title TSG Flooring Corp - exportOrder() Sequence

View <-- Controller : displayExportOrderBanner()
View --> Controller : void

Controller -> Service : exportOrders()
Service -> Service : getAllOrders()
Service -> ExportFileDao : exportOrders(List<Order>)
ExportFileDao --> ExportFileDao : marshallOrder(Order)
ExportFileDao --> Service : void
ExportFileDao -[#blue]-> AuditDao : writeAuditEntry()
Service --> Controller : void

Controller -> View : displayExportOrderSuccessBanner()
View --> Controller : void

@enduml

/*----------------------------------------------------*/

